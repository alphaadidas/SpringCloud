
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.barryku.cloud.cxf;

import java.util.Properties;
import java.util.logging.Logger;

import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

/**
 * This class was generated by Apache CXF 2.4.2
 * 2011-09-10T15:51:30.026-07:00
 * Generated source version: 2.4.2
 * 
 */

@javax.jws.WebService(
                      serviceName = "NotificationService",
                      portName = "Notification",
                      targetNamespace = "http://soap.sforce.com/2005/09/outbound",
                      wsdlLocation = "classpath:/sforce.wsdl",
                      endpointInterface = "com.barryku.cloud.cxf.NotificationPort")
                      
public class NotificationPortImpl implements NotificationPort {

    private static final Logger LOG = Logger.getLogger(NotificationPortImpl.class.getName());
    private static final String SEND_TO = "xyz@yahoo.com";
    private static final String GMAIL_ACCOUNT = "xxx@gmail.com";
    private static final String GMAIL_PASSWORD = "pass";
 
    /* (non-Javadoc)
     * @see com.barryku.cloud.cxf.NotificationPort#notifications(java.lang.String  organizationId ,)java.lang.String  actionId ,)java.lang.String  sessionId ,)java.lang.String  enterpriseUrl ,)java.lang.String  partnerUrl ,)java.util.List<com.barryku.cloud.cxf.BookCNotification>  notification )*
     */
    public boolean notifications(java.lang.String organizationId,java.lang.String actionId,java.lang.String sessionId,java.lang.String enterpriseUrl,java.lang.String partnerUrl,java.util.List<com.barryku.cloud.cxf.BookCNotification> notification) { 
        LOG.info("Executing operation notifications");
        System.out.println(organizationId);
        System.out.println(actionId);
        System.out.println(sessionId);
        System.out.println(enterpriseUrl);
        System.out.println(partnerUrl);
        System.out.println(notification);
        
        try {
        	String bookTitle = notification.get(0).getSObject().getName().getValue();
        	sendEmail(SEND_TO, "book added: " + bookTitle);
            boolean _return = true;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }
    
    private void sendEmail(String to, String msg) throws Exception {
		final String username = GMAIL_ACCOUNT;
		final String password = GMAIL_PASSWORD;
 
		Properties props = new Properties();
		props.setProperty("mail.transport.protocol", "smtp");   
		props.setProperty("mail.host", "smtp.gmail.com");  
		props.put("mail.smtp.auth", "true");  
		props.put("mail.smtp.port", "465");  
		props.put("mail.debug", "true");  
		props.put("mail.smtp.socketFactory.port", "465");  
		props.put("mail.smtp.socketFactory.class","javax.net.ssl.SSLSocketFactory");  
		props.put("mail.smtp.socketFactory.fallback", "false");    
		Session session = Session.getDefaultInstance(props,new javax.mail.Authenticator() {   
			protected PasswordAuthentication getPasswordAuthentication()   
			{  
				return new PasswordAuthentication(username,password);  
			}  
		});  
 
		Message message = new MimeMessage(session);
		message.setFrom(new InternetAddress("barry@no-spam.com"));
		message.setRecipients(Message.RecipientType.TO, InternetAddress
				.parse(to));
		message.setSubject("Testing Subject");
		message.setText(msg);

		Transport transport = session.getTransport();
		transport.connect();

		Transport.send(message);
		transport.close();

		System.out.println("Done");
    }
    


}
